(window.webpackJsonp=window.webpackJsonp||[]).push([[59],{196:function(e,s,n){"use strict";n.r(s);var a=n(0),r=Object(a.a)({},(function(){var e=this,s=e.$createElement,n=e._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h1",{attrs:{id:"九-node-js-脚本"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#九-node-js-脚本"}},[e._v("#")]),e._v(" 九.node.js 脚本")]),e._v(" "),n("p",[n("a",{attrs:{href:"https://nodejs.org/en/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Node.js"),n("OutboundLink")],1),e._v(" 丰富的生态能赋予我们更强的能力，对于前端工程师来说，使用 Node.js 来编写复杂的 npm script 具有明显的 2 个优势：首先，编写简单的工具脚本对前端工程师来说额外的学习成本很低甚至可以忽略不计，其次，因为 Node.js 本身是跨平台的，用它编写的脚本出现跨平台兼容问题的概率很小。")]),e._v(" "),n("p",[e._v("下面我们就一起探索下，如何把上节中使用 shell 编写的 cover 脚本改写成 Node.js 脚本，在 Node.js 脚本中我们也能体味到 "),n("a",{attrs:{href:"https://www.npmjs.com/package/shelljs",target:"_blank",rel:"noopener noreferrer"}},[e._v("shelljs"),n("OutboundLink")],1),e._v(" 这个工具包的强大。")]),e._v(" "),n("h3",{attrs:{id:"_1-安装-shelljs-依赖"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-安装-shelljs-依赖"}},[e._v("#")]),e._v(" 1. 安装 shelljs 依赖")]),e._v(" "),n("p",[e._v("使用如下命令安装 shelljs 到项目依赖中：")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("npm i shelljs -D\n# npm install shelljs --save-dev\n# yarn add shelljs -D\n\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br")])]),n("p",[e._v("此外，我们计划使用 "),n("a",{attrs:{href:"https://www.npmjs.com/package/chalk",target:"_blank",rel:"noopener noreferrer"}},[e._v("chalk"),n("OutboundLink")],1),e._v(" 来给输出加点颜色，让脚本变的更有趣，同样安装到 devDependencies 里面：")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("npm i chalk -D\n# npm install chalk --save-dev\n# yarn add chalk -D\n\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br")])]),n("h3",{attrs:{id:"_2-创建-node-js-脚本"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-创建-node-js-脚本"}},[e._v("#")]),e._v(" 2. 创建 Node.js 脚本")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("touch scripts/cover.js\n\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br")])]),n("h3",{attrs:{id:"_3-用-node-js-实现同等功能"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-用-node-js-实现同等功能"}},[e._v("#")]),e._v(" 3. 用 Node.js 实现同等功能")]),e._v(" "),n("p",[e._v("shelljs 为我们提供了各种常见命令的跨平台支持，比如 cp、mkdir、rm、cd 等命令，此外，理论上你可以在 Node.js 脚本中使用任何 "),n("a",{attrs:{href:"https://www.npmjs.com",target:"_blank",rel:"noopener noreferrer"}},[e._v("npmjs.com"),n("OutboundLink")],1),e._v(" 上能找到的包。清理归档目录、运行测试、归档并预览覆盖率报告的完整 Node.js 代码如下：")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("const { rm, cp, mkdir, exec, echo } = require('shelljs');\nconst chalk = require('chalk');\n\nconsole.log(chalk.green('1. remove old coverage reports...'));\nrm('-rf', 'coverage');\nrm('-rf', '.nyc_output');\n\nconsole.log(chalk.green('2. run test and collect new coverage...'));\nexec('nyc --reporter=html npm run test');\n\nconsole.log(chalk.green('3. archive coverage report by version...'));\nmkdir('-p', 'coverage_archive/$npm_package_version');\ncp('-r', 'coverage/*', 'coverage_archive/$npm_package_version');\n\nconsole.log(chalk.green('4. open coverage report for preview...'));\nexec('npm-run-all --parallel cover:serve cover:open');\n\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br"),n("span",{staticClass:"line-number"},[e._v("8")]),n("br"),n("span",{staticClass:"line-number"},[e._v("9")]),n("br"),n("span",{staticClass:"line-number"},[e._v("10")]),n("br"),n("span",{staticClass:"line-number"},[e._v("11")]),n("br"),n("span",{staticClass:"line-number"},[e._v("12")]),n("br"),n("span",{staticClass:"line-number"},[e._v("13")]),n("br"),n("span",{staticClass:"line-number"},[e._v("14")]),n("br"),n("span",{staticClass:"line-number"},[e._v("15")]),n("br"),n("span",{staticClass:"line-number"},[e._v("16")]),n("br"),n("span",{staticClass:"line-number"},[e._v("17")]),n("br")])]),n("p",[e._v("关于改动的几点说明：")]),e._v(" "),n("ul",[n("li",[e._v("简单的文件系统操作，建议直接使用 shelljs 提供的 cp、rm 等替换；")]),e._v(" "),n("li",[e._v("部分稍复杂的命令，比如 nyc 可以使用 exec 来执行，也可以使用 istanbul 包来完成；")]),e._v(" "),n("li",[e._v("在 exec 中也可以大胆的使用 npm script 运行时的环境变量，比如 "),n("code",[e._v("$npm_package_version")]),e._v("；")])]),e._v(" "),n("h3",{attrs:{id:"_4-让-package-json-指向新脚本"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-让-package-json-指向新脚本"}},[e._v("#")]),e._v(" 4. 让 package.json 指向新脚本")]),e._v(" "),n("p",[e._v("准备好 Node.js 脚本之后，我们需要修改 package.json 里面的命令，使其运行该脚本：")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('   "scripts": {\n     "test": "cross-env NODE_ENV=test mocha tests/",\n-    "cover": "scripty",\n+    "cover": "node scripts/cover.js",\n     "cover:open": "scripty"\n   },\n\n')])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br")])]),n("h3",{attrs:{id:"_5-测试-cover-命名"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-测试-cover-命名"}},[e._v("#")]),e._v(" 5. 测试 cover 命名")]),e._v(" "),n("p",[e._v("重新运行 npm run cover 命令，不出意外的话，基本功能是正常的，除了我们新加的绿色输出，如下图：")]),e._v(" "),n("p",[n("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2017/12/10/1603de95af9b2c41?w=1060&h=587&f=png&s=87226",alt:""}})]),e._v(" "),n("p",[e._v("以上，本小节完，这里只是简单展示了如何组织 Node.js 脚本并且让其与 npm script 关联起来，至于具体在脚本中做什么事情，请你自由发挥吧。")]),e._v(" "),n("hr"),e._v(" "),n("blockquote",[n("p",[e._v("本节用到的代码见 "),n("a",{attrs:{href:"https://github.com/wangshijun/automated-workflow-with-npm-script/tree/08-using-nodejs-script-as-replacement",target:"_blank",rel:"noopener noreferrer"}},[e._v("GitHub"),n("OutboundLink")],1),e._v("，想边看边动手练习的同学可以拉下来自己改，注意切换到正确的分支 "),n("code",[e._v("08-using-nodejs-script-as-replacement")]),e._v("。")])]),e._v(" "),n("hr")])}),[],!1,null,null,null);s.default=r.exports}}]);